<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <bean id="mathBean" class="com.limu.spring6.bean.MathBean">
        <!--第一种方案：使用实体符号替代特殊符号-->
        <!--<property name="result" value="2 &lt; 3"/>-->

        <!--第二种方案：使用<![CDATA[]]>-->
        <property name="result">
            <value><![CDATA[2<3]]></value>
        </property>
    </bean>

    <!--让spring来管理数据源-->
    <bean id="myDateSourceBean" class="com.limu.spring6.jdbc.MyDataSource">
        <property name="driver" value="com.mysql.cj.jdbc.Driver" />
        <property name="url" value="jdbc://mysql://localhost:3306/bjpowernode" />
        <property name="userName" value="root" />
        <property name="password" value="123456" />
    </bean>

    <bean id="catBean" class="com.limu.spring6.bean.Cat">
        <!--<property name="name" value="tom"/>-->
        <!--不给属性注入，属性的默认值就是null-->
        <!--注意：value值填null，并不是注入null，而是"null"字符串-->
        <!--<property name="name" value="null"/>-->

        <!--手动注入null-->
        <!--
        <property name="name">
            <null/>
        </property>
        -->

        <!--注入空字符串的第一种方式-->
        <!--<property name="name" value=""/>-->

        <!--注入空字符串的第二种方式-->
        <property name="name">
            <value/>
        </property>

        <property name="age" value="2"/>
    </bean>

    <!--测试哪些类型是简单类型-->
    <bean id="svt" class="com.limu.spring6.bean.SimpleValueType">
        <property name="age" value="1"/>
        <property name="age2" value="2"/>
        <property name="userName" value="userName"/>
        <property name="c" value="c"/>
        <property name="c2" value="a"/>
        <property name="flag" value="true"/>
        <property name="flag2" value="false"/>
        <property name="clazz" value="com.limu.spring6.bean.User"/>
        <property name="season" value="SPRING"/>
        <!--报错，字符串类型无法转换成java.util.Date类型-->
        <!--<property name="birth" value="2022-10-22"/>-->
        <!--如果需要通过简单类型给java.util.Date赋值，这个日期字符串格式是有要求的-->
        <!--在实际开发中，一般不把Date当作简单类型，不用value属性赋值，而是使用ref属性赋值-->
        <property name="birth" value="Tue Nov 08 16:44:17 CST 2022"/>
    </bean>

    <!--注入简单类型-->
    <bean id="userBean" class="com.limu.spring6.bean.User">
        <!--给简单数据类型赋值，需要使用value-->
        <property name="username" value="limu"/>
        <property name="password" value="123456"/>
        <property name="age" value="20" />
    </bean>

    <!--声明/调用bean-->
    <bean id="orderDaoBean" class="com.limu.spring6.dao.OrderDao"/>

    <bean id="orderServiceBean" class="com.limu.spring6.service.OrderService">
        <!--使用ref属性来引入，就是注入外部Bean-->
        <property name="orderDao" ref="orderDaoBean"/>
    </bean>

    <bean id="orderServiceBean2" class="com.limu.spring6.service.OrderService">
        <property name="orderDao">
            <!--在properties标签中使用嵌套的bean标签，这就是内部bean-->
            <bean class="com.limu.spring6.dao.OrderDao"/>
        </property>
    </bean>
</beans>